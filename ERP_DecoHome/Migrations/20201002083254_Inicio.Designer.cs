// <auto-generated />
using System;
using ERP_DecoHome.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERP_DecoHome.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201002083254_Inicio")]
    partial class Inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ERP_DecoHome.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Camas"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Armarios"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sofás"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Estanterías"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mesas"
                        });
                });

            modelBuilder.Entity("ERP_DecoHome.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Door")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailCustomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Calle Francia",
                            City = "Madrid",
                            Country = "España",
                            Dni = "44103145-T",
                            Door = "1",
                            EmailCustomer = "lafinca@gmail.com",
                            Flat = "1",
                            Name = "Decoración La Finca",
                            Number = "105",
                            Phone = "669252525",
                            Region = "Madrid",
                            Zip = "05906"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Avenida America",
                            City = "Sevilla",
                            Country = "España",
                            Dni = "38184205-S",
                            Door = "1",
                            EmailCustomer = "cocinasargui@gmail.com",
                            Flat = "2",
                            Name = "Cocinas Arguiñano",
                            Number = "22",
                            Phone = "656231212",
                            Region = "Andalucía",
                            Zip = "04356"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Rambla Marina",
                            City = "Valencia",
                            Country = "España",
                            Dni = "22103326-G",
                            Door = "",
                            EmailCustomer = "dao@gmail.com",
                            Flat = "",
                            Name = "Despacho Abogados de Oficio",
                            Number = "3",
                            Phone = "669264141",
                            Region = "Valencia",
                            Zip = "02564"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Calle Sepulveda s/n",
                            City = "Pontevedra",
                            Country = "España",
                            Dni = "56237501-A",
                            Door = "",
                            EmailCustomer = "cervantes@gmail.com",
                            Flat = "",
                            Name = "Escuela Cervantes",
                            Number = "",
                            Phone = "623123456",
                            Region = "Galicia",
                            Zip = "07652"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Calle Paris",
                            City = "Zaragoza",
                            Country = "España",
                            Dni = "22356210-L",
                            Door = "3",
                            EmailCustomer = "sinblanca@gmail.com",
                            Flat = "40",
                            Name = "Banco Sin Blanca",
                            Number = "41",
                            Phone = "600654321",
                            Region = "Aragón",
                            Zip = "06589"
                        });
                });

            modelBuilder.Entity("ERP_DecoHome.Models.DetailedOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPvp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPvpIva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("DetailedOrder");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1,
                            OrderId = 1,
                            ProductId = 1,
                            TotalCost = 185.00m,
                            TotalPvp = 240.50m,
                            TotalPvpIva = 291.00m
                        },
                        new
                        {
                            Id = 2,
                            Amount = 5,
                            OrderId = 1,
                            ProductId = 5,
                            TotalCost = 525m,
                            TotalPvp = 682.50m,
                            TotalPvpIva = 825.83m
                        });
                });

            modelBuilder.Entity("ERP_DecoHome.Models.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "a18be9c0-aa65-4af8-bd17-00bd9344e575",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d77c1a69-56fe-4192-905c-6ed15153cd1b",
                            Department = "Ventas",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Juan",
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            Password = "Admin100#",
                            PasswordHash = "AQAAAAEAACcQAAAAEMZQKDgbWnopojCWF/cC+m3fykPYL+UP4oI1qK+Xg4db42mwjOznA1CNTNYGkSRGnA==",
                            PhoneNumberConfirmed = false,
                            Position = "Jefe de ventas",
                            Rol = "Administrador",
                            Salary = 45000.00m,
                            SecurityStamp = "b83e4cc2-2548-48fc-abc2-da8f0875fece",
                            Surname1 = "García",
                            Surname2 = "Pérez",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        });
                });

            modelBuilder.Entity("ERP_DecoHome.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AssignDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Door")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Flat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriorityId")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalPvp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalPvpIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("StateId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignDate = new DateTime(2020, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            EmployeeId = "a18be9c0-aa65-4af8-bd17-00bd9344e575",
                            EndDate = new DateTime(2020, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PriorityId = 1,
                            StartDate = new DateTime(2020, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StateId = 1,
                            TotalCost = 710m,
                            TotalPvp = 923.00m,
                            TotalPvpIva = 1116.83m
                        });
                });

            modelBuilder.Entity("ERP_DecoHome.Models.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Priority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Normal"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Urgente"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Muy urgente"
                        });
                });

            modelBuilder.Entity("ERP_DecoHome.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPvp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPvpIva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100,
                            CategoryId = 1,
                            Cost = 185.00m,
                            Name = "Cama nido",
                            UnitPvp = 240.50m,
                            UnitPvpIva = 291.00m
                        },
                        new
                        {
                            Id = 2,
                            Amount = 9,
                            CategoryId = 1,
                            Cost = 85.00m,
                            Name = "Cama apilable",
                            UnitPvp = 110.50m,
                            UnitPvpIva = 133.71m
                        },
                        new
                        {
                            Id = 3,
                            Amount = 100,
                            CategoryId = 1,
                            Cost = 45m,
                            Name = "Colchón espuma",
                            UnitPvp = 58.50m,
                            UnitPvpIva = 70.79m
                        },
                        new
                        {
                            Id = 4,
                            Amount = 100,
                            CategoryId = 2,
                            Cost = 75m,
                            Name = "Armario con puertas correderas",
                            UnitPvp = 97.5m,
                            UnitPvpIva = 117.97m
                        },
                        new
                        {
                            Id = 5,
                            Amount = 35,
                            CategoryId = 2,
                            Cost = 105m,
                            Name = "Armario abierto",
                            UnitPvp = 136.5m,
                            UnitPvpIva = 165.17m
                        },
                        new
                        {
                            Id = 6,
                            Amount = 6,
                            CategoryId = 2,
                            Cost = 375m,
                            Name = "Combinación armario",
                            UnitPvp = 487.50m,
                            UnitPvpIva = 589.87m
                        },
                        new
                        {
                            Id = 7,
                            Amount = 50,
                            CategoryId = 3,
                            Cost = 390m,
                            Name = "Sofá 2 plazas",
                            UnitPvp = 507m,
                            UnitPvpIva = 613.47m
                        },
                        new
                        {
                            Id = 8,
                            Amount = 100,
                            CategoryId = 3,
                            Cost = 790m,
                            Name = "Sofá 3 plazas",
                            UnitPvp = 1027m,
                            UnitPvpIva = 1242.67m
                        },
                        new
                        {
                            Id = 9,
                            Amount = 75,
                            CategoryId = 3,
                            Cost = 850m,
                            Name = "Sofá cama 3 plazas",
                            UnitPvp = 1105m,
                            UnitPvpIva = 1337.05m
                        },
                        new
                        {
                            Id = 10,
                            Amount = 100,
                            CategoryId = 4,
                            Cost = 50m,
                            Name = "Estantería de cubos",
                            UnitPvp = 65m,
                            UnitPvpIva = 78.65m
                        },
                        new
                        {
                            Id = 11,
                            Amount = 80,
                            CategoryId = 4,
                            Cost = 30m,
                            Name = "Estantería de pared",
                            UnitPvp = 39m,
                            UnitPvpIva = 47.19m
                        },
                        new
                        {
                            Id = 12,
                            Amount = 100,
                            CategoryId = 4,
                            Cost = 25m,
                            Name = "Estantería con puertas",
                            UnitPvp = 32.50m,
                            UnitPvpIva = 39.32m
                        },
                        new
                        {
                            Id = 13,
                            Amount = 40,
                            CategoryId = 5,
                            Cost = 19m,
                            Name = "Mesa de jardín",
                            UnitPvp = 24.70m,
                            UnitPvpIva = 29.89m
                        },
                        new
                        {
                            Id = 14,
                            Amount = 3,
                            CategoryId = 5,
                            Cost = 190m,
                            Name = "Mesa de despacho",
                            UnitPvp = 247m,
                            UnitPvpIva = 298.87m
                        },
                        new
                        {
                            Id = 15,
                            Amount = 100,
                            CategoryId = 5,
                            Cost = 110m,
                            Name = "Mesa de cocina",
                            UnitPvp = 143m,
                            UnitPvpIva = 173.03m
                        });
                });

            modelBuilder.Entity("ERP_DecoHome.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pendiente"
                        },
                        new
                        {
                            Id = 2,
                            Name = "En tratamiento"
                        },
                        new
                        {
                            Id = 3,
                            Name = "En reparto"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Finalizado"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cancelado"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ERP_DecoHome.Models.DetailedOrder", b =>
                {
                    b.HasOne("ERP_DecoHome.Models.Order", "Order")
                        .WithMany("DetailedOrders")
                        .HasForeignKey("OrderId");

                    b.HasOne("ERP_DecoHome.Models.Product", "Product")
                        .WithMany("DetailedOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP_DecoHome.Models.Order", b =>
                {
                    b.HasOne("ERP_DecoHome.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.HasOne("ERP_DecoHome.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ERP_DecoHome.Models.Priority", "Priority")
                        .WithMany("Orders")
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_DecoHome.Models.State", "State")
                        .WithMany("Orders")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP_DecoHome.Models.Product", b =>
                {
                    b.HasOne("ERP_DecoHome.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ERP_DecoHome.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ERP_DecoHome.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_DecoHome.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ERP_DecoHome.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
